/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface_ManageAirliner;

import Business.Airliner;
import Business.Flight;
import Business.TravelAgency;
import UserInterface_ManageTravelAgency.TravelAgencyMngArea;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.HashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Business.Planes;
import java.security.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JFormattedTextField.AbstractFormatter;

/**
 *
 * @author Bhumika
 */
public class CreateNewFlight extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewFlightJpanel
     */
    private JPanel cardSequenceJPanel;
    private Airliner airliner;
    private TravelAgency travelAgency;
    CreateNewFlight(JPanel cardSequenceJpanel, Airliner airliner) {
        
        initComponents();
        this.cardSequenceJPanel = cardSequenceJpanel;
        this.airliner = airliner;
        txtAirlinerName.setEnabled(false);
        txtAirlinerName.setText(airliner.getAirlinerName());
        
        populateFlight();
        txtTotalSeats.setEnabled(false);
        txtTotalSeats.setText(Integer.toString(airliner.getPlaneList().get(ComboBox.getSelectedIndex()).getTotalSeats()));
    }
    
        public boolean checkString(String string){
        Pattern p = Pattern.compile("^[A-Za-z]+$");
        Matcher m = p.matcher(string);
        boolean b = m.matches();
        return b;
    }
    
    public boolean checkFlightNumber(String string){
        Pattern p = Pattern.compile("^[\\w]+-[\\w]+$");
        Matcher m = p.matcher(string);
        boolean b = m.matches();
        return b;
    }
    
    public boolean checkTimePattern(String string){
       Pattern p = Pattern.compile("^[0-9]+:[0-9]+$");
       Matcher m = p.matcher(string);
       boolean b = m.matches();
       return b;
    }
    
     private void populateFlight(){
         HashSet <String> planes = new HashSet<>();
         
       //  for(Airliner airliner:travelAgency.getAirlinerDirectory().getAirlinerList()){
            int i=0;
            for(Planes Plane:airliner.getPlaneList()) { 
                planes.add(airliner.getPlaneList().get(i).getPlaneName());
                i++;
                }
          //  }
         
         for(String plane : planes){
             ComboBox.addItem(plane);
             
         }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        txtAirlinerName = new javax.swing.JTextField();
        txtFlightNumber = new javax.swing.JTextField();
        txtFlightDestination = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFlightDeparture = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFlightArrival = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTotalSeats = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtFlightSource = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        ComboBox = new javax.swing.JComboBox<>();
        depDate = new org.jdesktop.swingx.JXDatePicker();
        arrDate = new org.jdesktop.swingx.JXDatePicker();

        setBackground(new java.awt.Color(22, 72, 128));

        lblHeading.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("CREATE NEW FLIGHT");

        btnBack.setBackground(new java.awt.Color(245, 245, 246));
        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(78, 114, 175));
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(245, 245, 246));
        btnCreate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(78, 114, 175));
        btnCreate.setText("Create Flight");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        txtAirlinerName.setEditable(false);
        txtAirlinerName.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtAirlinerName.setForeground(new java.awt.Color(78, 114, 175));
        txtAirlinerName.setEnabled(false);
        txtAirlinerName.setPreferredSize(new java.awt.Dimension(200, 30));

        txtFlightNumber.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtFlightNumber.setForeground(new java.awt.Color(78, 114, 175));
        txtFlightNumber.setPreferredSize(new java.awt.Dimension(200, 30));

        txtFlightDestination.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtFlightDestination.setForeground(new java.awt.Color(78, 114, 175));
        txtFlightDestination.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Destination:");

        txtFlightDeparture.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtFlightDeparture.setForeground(new java.awt.Color(78, 114, 175));
        txtFlightDeparture.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Flight Number:");

        txtFlightArrival.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtFlightArrival.setForeground(new java.awt.Color(78, 114, 175));
        txtFlightArrival.setPreferredSize(new java.awt.Dimension(200, 30));
        txtFlightArrival.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFlightArrivalActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Airliner Name :");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Price Of Seat :");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total Seats :");

        txtTotalSeats.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtTotalSeats.setForeground(new java.awt.Color(78, 114, 175));
        txtTotalSeats.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Departure Time:");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Source:");

        txtFlightSource.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtFlightSource.setForeground(new java.awt.Color(78, 114, 175));
        txtFlightSource.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Arrival Time:");

        txtprice.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtprice.setForeground(new java.awt.Color(78, 114, 175));
        txtprice.setPreferredSize(new java.awt.Dimension(200, 30));

        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(depDate, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrDate, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(61, 61, 61)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(446, 446, 446)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(208, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(372, 372, 372)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtprice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(txtFlightArrival, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(txtFlightDeparture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(txtFlightDestination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addComponent(txtFlightSource, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(txtFlightNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(txtAirlinerName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addComponent(txtTotalSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap(372, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124)
                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166)
                .addComponent(depDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(arrDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(137, 137, 137)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFlightNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtFlightSource, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFlightDestination, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFlightDeparture, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFlightArrival, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtprice, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtTotalSeats, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(138, 138, 138)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        cardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout)cardSequenceJPanel.getLayout();
        layout.previous(cardSequenceJPanel);
        Component[] comps= cardSequenceJPanel.getComponents();
        for(Component c:comps)
        {
            if(c instanceof AirlinerMngArea)
            {
                AirlinerMngArea panel=(AirlinerMngArea) c;
                panel.calculateFleetSize();
                panel.populateAirlinersTable();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String airlinerName = txtAirlinerName.getText();
        String flightNumber = txtFlightNumber.getText();
        String source = txtFlightSource.getText();
        String destination = txtFlightDestination.getText();
        String departure = txtFlightDeparture.getText();
        String arrival = txtFlightArrival.getText();
        Date DepDate=depDate.getDate();
        Date ArrDate=arrDate.getDate();
        
       
        try{
            
            Double price = Double.parseDouble(txtprice.getText());
            int totalSeats = Integer.parseInt(txtTotalSeats.getText());
            int j=ComboBox.getSelectedIndex();
            for(int i=0;i<airliner.getFlightList().size();i++){
                        int dep=Integer.parseInt(departure.substring(0, 2));
                        int arr=1+Integer.parseInt(arrival.substring(0, 2));
                        
                        int past_arr=1+Integer.parseInt(airliner.getFlightList().get(i).getArrivalTime().substring(0, 2));
                        int past_dep=Integer.parseInt(airliner.getFlightList().get(i).getDepartureTime().substring(0, 2));
                       
                if(airliner.getFlightList().get(j)==airliner.getFlightList().get(i)){
                       
                    if(airliner.getFlightList().get(j).getDepDate()==airliner.getFlightList().get(i).getDepDate()){
                        if(dep>past_dep && dep<past_arr){
                            JOptionPane.showMessageDialog(null, "Flight is already scheduled");
                            throw new Exception("Problem with Scheduling");
                        }else if(arr>past_dep && arr<past_arr){
                            JOptionPane.showMessageDialog(null, "Flight is already scheduled");
                            throw new Exception("Problem with Scheduling");
                        }
                    }else if(airliner.getFlightList().get(j).getDepDate()==airliner.getFlightList().get(i).getArrDate()){
                        if( dep<past_arr){
                            JOptionPane.showMessageDialog(null, "Flight is already scheduled");
                            throw new Exception("Problem with Scheduling");
                        }
                    }else if(airliner.getFlightList().get(j).getArrDate()==airliner.getFlightList().get(i).getDepDate()){
                        if( arr>past_dep){
                            JOptionPane.showMessageDialog(null, "Flight is already scheduled");
                            throw new Exception("Problem with Scheduling");
                        }
                    }
                   
                }
            }
        
            
        if(!checkFlightNumber(flightNumber)){
            JOptionPane.showMessageDialog(null, "Please enter valid flight number : XX-XXXX");
        }
        else if(!checkTimePattern(departure)){
            JOptionPane.showMessageDialog(null, "Please enter valid departure time : XX:XX");
        }
        else if(!checkTimePattern(arrival)){
            JOptionPane.showMessageDialog(null, "Please enter valid arrival time : XX:XX");
        }
        else if(!checkString(source)){
            JOptionPane.showMessageDialog(null, "Please enter valid source");
        }
        else if(!checkString(destination)){
            JOptionPane.showMessageDialog(null, "Please enter valid destination");
        }
           
        
        else {
            airliner.addFlight(airlinerName, flightNumber, source, destination, departure, arrival, price, totalSeats,DepDate,ArrDate);
            txtFlightNumber.setText("");
            txtFlightSource.setText("");
            txtFlightDestination.setText("");
            txtFlightDeparture.setText("");
            txtFlightArrival.setText("");
            txtprice.setText("");
            txtTotalSeats.setText(Integer.toString(airliner.getPlaneList().get(ComboBox.getSelectedIndex()).getTotalSeats()));
            JOptionPane.showMessageDialog(null, "Flight successfully added");
        }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Price and Total seats should be a number");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Flight is already scheduled");
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtFlightArrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFlightArrivalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFlightArrivalActionPerformed

    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed
        // TODO add your handling code here:
         txtTotalSeats.setText(Integer.toString(airliner.getPlaneList().get(ComboBox.getSelectedIndex()).getTotalSeats()));
    }//GEN-LAST:event_ComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox;
    private org.jdesktop.swingx.JXDatePicker arrDate;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private org.jdesktop.swingx.JXDatePicker depDate;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JTextField txtAirlinerName;
    private javax.swing.JTextField txtFlightArrival;
    private javax.swing.JTextField txtFlightDeparture;
    private javax.swing.JTextField txtFlightDestination;
    private javax.swing.JTextField txtFlightNumber;
    private javax.swing.JTextField txtFlightSource;
    private javax.swing.JTextField txtTotalSeats;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables
}
