/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientsInHospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yash
 */
public class MoniteredPatientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MoniteredPatientsJPanel
     */
    
    JPanel userProcessContainer;
    UserAccount userAccount;
    Enterprise enterprise;
    
    
    public MoniteredPatientsJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise) {
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        this.userProcessContainer=userProcessContainer;
        initComponents();
        populateTable();
    }
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) patientsListJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {

            System.out.println(request.toString());
            for (UserAccount ua : ((PatientsInHospitalWorkRequest) request).getPatientsList()) {
               // System.out.println(ua +"              yash");
                Object row[] = new Object[2];
                row[0] = ua;
                row[1]=ua.getPatientAccount().getInfected();
                model.addRow(row);
            }

        }
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        sendForRequestButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientsListJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        backJButton.setBackground(new java.awt.Color(255, 255, 255));
        backJButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        sendForRequestButton.setBackground(new java.awt.Color(255, 255, 255));
        sendForRequestButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        sendForRequestButton.setText("Send to Lab test");
        sendForRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendForRequestButtonActionPerformed(evt);
            }
        });

        patientsListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Patient name", "Infected"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientsListJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(268, 268, 268))
                    .addComponent(sendForRequestButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backJButton)
                .addGap(193, 193, 193)
                .addComponent(sendForRequestButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void sendForRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendForRequestButtonActionPerformed
        int selectedRow = patientsListJTable.getSelectedRow();
        if (selectedRow >= 0) {
            UserAccount ac = (UserAccount)patientsListJTable.getValueAt(selectedRow, 0);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterprise,ac));
        layout.next(userProcessContainer);
         JOptionPane.showMessageDialog(null, "Sent for Lab Test");

        } else {
             JOptionPane.showMessageDialog(null, "Select Raw for it");
        }
        
        
        
    }//GEN-LAST:event_sendForRequestButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientsListJTable;
    private javax.swing.JButton sendForRequestButton;
    // End of variables declaration//GEN-END:variables
}
