/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalManager;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientsInHospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Yash
 */
public class HospitalManagerWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form HospitalManagerWorkArea
     */
    JPanel userProcessContainer;
    Organization organization;
    Enterprise enterprise;
    UserAccount account;
    int infectedPatients =0;
    
    
    public HospitalManagerWorkArea(JPanel userProcessContainer, Organization organization, Enterprise enterprise, UserAccount account) 
    {
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.organization=organization;
        this.enterprise=enterprise;
        initComponents();populateTable();
    }
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) patientsListJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {

            System.out.println(request.toString());
            for (UserAccount ua : ((PatientsInHospitalWorkRequest) request).getPatientsList()) {
               // System.out.println(ua +"              yash");
                Object row[] = new Object[4];
                row[0] = ua;
                row[1] = ua.getPatientAccount().getInfected();
                if(ua.getPatientAccount().getInfected()==true){
                    infectedPatients++;
                }
                model.addRow(row);
            }

        }
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientsListJTable = new javax.swing.JTable();
        ShowResultsjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientsListJTable.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        patientsListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Patient name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientsListJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 450, 350));

        ShowResultsjButton.setBackground(new java.awt.Color(255, 255, 255));
        ShowResultsjButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        ShowResultsjButton.setText("Show Over All Patients chart");
        ShowResultsjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowResultsjButtonActionPerformed(evt);
            }
        });
        add(ShowResultsjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 430, 320, 50));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Image/Hospital_GIF.gif"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 90, 530, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void ShowResultsjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowResultsjButtonActionPerformed
        // TODO add your handling code here:
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Infected", new Integer(infectedPatients));
        pieDataset.setValue("Not Infected", new Integer(patientsListJTable.getRowCount()));
//        pieDataset.setValue("three", new Integer(10));
//        pieDataset.setValue("four", new Integer(10));
       
        JFreeChart chart = ChartFactory.createPieChart("Covid-19 Data", pieDataset, true, true, true);
        PiePlot p= (PiePlot)chart.getPlot();
        
        ChartFrame frame = new ChartFrame("Covid-19 Data", chart);
        frame.setVisible(true);
        frame.setSize(450,500);
    }//GEN-LAST:event_ShowResultsjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ShowResultsjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientsListJTable;
    // End of variables declaration//GEN-END:variables
}
