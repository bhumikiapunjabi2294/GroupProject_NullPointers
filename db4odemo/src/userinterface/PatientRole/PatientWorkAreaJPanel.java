/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.VitalSign.VitalSign;
import Business.WorkQueue.PatientsAllocatedWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.DoctorRole.RequestLabTestJPanel;

/**
 *
 * @author yash
 */
public class PatientWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private  Organization organization;
    private Enterprise enterprise;
    private UserAccount account;
    
    public PatientWorkAreaJPanel(JPanel userProcessContainer, Organization organization, Enterprise enterprise, UserAccount account) {
        
        this.userProcessContainer= userProcessContainer;
        this.organization= organization;
        this.enterprise= enterprise;
        this.account= account;
        initComponents();
        populateTable();
        HealthConditionjLabel.setText(account.getPatientAccount().getCondition());
       
       
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) VitalSignsJTable.getModel();
        System.out.println(account.getPatientAccount().getVitalSignHistory().getVitalSigns());
        model.setRowCount(0);
        for (VitalSign vitalSign  : account.getPatientAccount().getVitalSignHistory().getVitalSigns()){
            System.out.println(vitalSign);
            Object[] row = new Object[5];
            row[0] = vitalSign.getBodyTemperature();
            row[2] = vitalSign.getRespiratoryRate();
            row[3] = vitalSign.getCoughType();
            row[1] = vitalSign.getHeadache();
            row[4] = vitalSign.getMusclePain();
            
            model.addRow(row);
            }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        VitalSignsJTable = new javax.swing.JTable();
        PersonalInfoBtn = new javax.swing.JButton();
        addBTN1 = new javax.swing.JButton();
        refreshjButton = new javax.swing.JButton();
        HealthConditionjLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        VitalSignsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Body Temp", "Headache", "Respiratory Rate", "Cough Type", "Muscle Pain"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(VitalSignsJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 810, 640));

        PersonalInfoBtn.setBackground(new java.awt.Color(255, 255, 255));
        PersonalInfoBtn.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        PersonalInfoBtn.setText("Personal Info");
        PersonalInfoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PersonalInfoBtnActionPerformed(evt);
            }
        });
        add(PersonalInfoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 220, -1));

        addBTN1.setBackground(new java.awt.Color(255, 255, 255));
        addBTN1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        addBTN1.setText("ADD New Vital Sign");
        addBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTN1ActionPerformed(evt);
            }
        });
        add(addBTN1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, -1));

        refreshjButton.setBackground(new java.awt.Color(255, 255, 255));
        refreshjButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });
        add(refreshjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 220, -1));
        add(HealthConditionjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 290, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Image/managePat.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTN1ActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("AddVitalSign", new AddVitalSign(userProcessContainer, account, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addBTN1ActionPerformed

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshjButtonActionPerformed

    private void PersonalInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PersonalInfoBtnActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("AddPersonalInfo", new AddPersonalInformation(userProcessContainer, account, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_PersonalInfoBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HealthConditionjLabel;
    private javax.swing.JButton PersonalInfoBtn;
    private javax.swing.JTable VitalSignsJTable;
    private javax.swing.JButton addBTN1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshjButton;
    // End of variables declaration//GEN-END:variables
}
