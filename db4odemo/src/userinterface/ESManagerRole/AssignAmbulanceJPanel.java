/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ESManagerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CallingESWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yash
 */
public class AssignAmbulanceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AssignAmbulanceJPanel
     */
    private JPanel userProcessContainer;
    private CallingESWorkRequest wr;
    private Enterprise e;
    
    
    public AssignAmbulanceJPanel(JPanel userProcessContainer, CallingESWorkRequest wr, Enterprise e) {
        this.userProcessContainer=userProcessContainer;
        this.wr = wr;
        this.e=e;
        initComponents();
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) ambulancejTable.getModel();

        model.setRowCount(0);

        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {

            if (o.getSupportedRole().toString().equals("[Business.Role.AmbulanceRole]")) {
                for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {

                    Object[] row = new Object[1];

                    row[0] = u;

                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ambulancejTable = new javax.swing.JTable();
        assignjButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ambulancejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Ambulance Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ambulancejTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 42, -1, 90));

        assignjButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        assignjButton.setText("Assign");
        assignjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignjButtonActionPerformed(evt);
            }
        });
        add(assignjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignjButtonActionPerformed
        int selectedRow = ambulancejTable.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to Confirm Assigning the Ambulance ?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) { 
       
        UserAccount a = (UserAccount) ambulancejTable.getValueAt(selectedRow, 0);
        a.getWorkQueue().getWorkRequestList().add(wr);
        wr.setReceiver(a);
        wr.setStatus("Ambulance assigned to pickup patient!!");
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_assignjButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ambulancejTable;
    private javax.swing.JButton assignjButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
